@.str = private unnamed_addr constant [3 x i8] c"%d\00", align 1

define dso_local i32 @getint() {
entry:
  %n = alloca i32, align 4
  %call = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32* %n)
  %0 = load i32, i32* %n, align 4
  ret i32 %0
}

declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @scanf(i8*, ...) #2

define dso_local void @putch(i32 %c) {
entry:
  %c.addr = alloca i32, align 4
  store i32 %c, i32* %c.addr, align 4
  %0 = load i32, i32* %c.addr, align 4
  %call = call i32 @putchar(i32 %0)
  ret void
}

declare dso_local i32 @putchar(i32) #2

define dso_local void @putint(i32 %n) {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  %0 = load i32, i32* %n.addr, align 4
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i32 0, i32 0), i32 %0)
  ret void
}

declare dso_local i32 @printf(i8*, ...) #2