declare i32 @getint()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)

@a0 = dso_local constant i32 0

define dso_local void @f() {
	ret void
}
define dso_local void @ff(i32 %var2_0, i32 %var2_1, i32 %var2_2) {
	%tmp2_1 = alloca i32
	store i32 %var2_0, i32 * %tmp2_1
	%tmp2_2 = alloca i32
	store i32 %var2_1, i32 * %tmp2_2
	%tmp2_3 = alloca i32
	store i32 %var2_2, i32 * %tmp2_3
	%tmp2_4 = load i32, i32 * %tmp2_3
	%tmp2_5 = add i32 %tmp2_4, 1
	store i32 %tmp2_5, i32 * %tmp2_3
	ret void
}
define dso_local i32 @fd(i32 %var3_0) {
	%tmp3_1 = alloca i32
	store i32 %var3_0, i32 * %tmp3_1
	%tmp3_2 = load i32, i32 * %tmp3_1
	ret i32 %tmp3_2
}
define dso_local i32 @fk(i32 %var4_0, i32* %var4_1, [2 x i32]* %var4_2) {
	%tmp4_1 = alloca i32
	store i32 %var4_0, i32 * %tmp4_1
	%tmp4_2 = alloca i32*
	store i32* %var4_1, i32* * %tmp4_2
	%tmp4_3 = alloca [2 x i32]*
	store [2 x i32]* %var4_2, [2 x i32]* * %tmp4_3
	ret i32 1
}
define dso_local i32 @main() {
	call void @putch(i32 50)
	call void @putch(i32 49)
	call void @putch(i32 51)
	call void @putch(i32 55)
	call void @putch(i32 49)
	call void @putch(i32 48)
	call void @putch(i32 54)
	call void @putch(i32 52)
	call void @putch(i32 10)
	call void @putch(i32 104)
	call void @putch(i32 101)
	call void @putch(i32 105)
	call void @putch(i32 104)
	call void @putch(i32 101)
	call void @putch(i32 105)
	call void @putint(i32 0)
	call void @putch(i32 10)
	call void @putint(i32 8)
	call void @putch(i32 10)
	call void @putch(i32 65)
	call void @putch(i32 67)
	call void @putch(i32 10)
	call void @putch(i32 87)
	call void @putch(i32 65)
	call void @putch(i32 10)
	call void @putch(i32 84)
	call void @putch(i32 76)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 82)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 80)
	call void @putch(i32 69)
	call void @putch(i32 10)
	call void @putch(i32 65)
	call void @putch(i32 75)
	call void @putch(i32 33)
	call void @putch(i32 33)
	call void @putch(i32 10)
	%var5_0 = alloca i32
	store i32 1, i32 * %var5_0
	%tmp5_41 = load i32, i32 * %var5_0
	%tmp5_42 = icmp slt i32 0, %tmp5_41
	br i1 %tmp5_42, label %then6, label %follow7
then6:
	store i32 1, i32 * %var5_0
	br label %follow7
follow7:
	%tmp5_43 = load i32, i32 * %var5_0
	%tmp5_44 = icmp sgt i32 0, %tmp5_43
	br i1 %tmp5_44, label %then8, label %else9
then8:
	store i32 1, i32 * %var5_0
	br label %follow10
else9:
	store i32 1, i32 * %var5_0
	br label %follow10
follow10:
	%tmp5_45 = load i32, i32 * %var5_0
	%tmp5_46 = icmp eq i32 0, %tmp5_45
	br i1 %tmp5_46, label %then11, label %follow12
then11:
	%tmp5_47 = mul i32 3, 4
	store i32 %tmp5_47, i32 * %var5_0
	br label %follow12
follow12:
	%tmp5_49 = load i32, i32 * %var5_0
	%tmp5_48 = icmp eq i32 %tmp5_49, 0
	%tmp5_50 = zext i1 %tmp5_48 to i32
	%tmp5_51 = icmp ne i32 %tmp5_50, 0
	br i1 %tmp5_51, label %then13, label %follow14
then13:
	%tmp5_52 = sub i32 3, 4
	%tmp5_53 = add i32 %tmp5_52, 5
	store i32 %tmp5_53, i32 * %var5_0
	br label %follow14
follow14:
	%tmp5_54 = load i32, i32 * %var5_0
	%tmp5_55 = icmp sge i32 0, %tmp5_54
	br i1 %tmp5_55, label %then15, label %follow16
then15:
	store i32 9, i32 * %var5_0
	br label %follow16
follow16:
	%tmp5_56 = load i32, i32 * %var5_0
	%tmp5_57 = icmp sle i32 0, %tmp5_56
	br i1 %tmp5_57, label %then17, label %follow18
then17:
	store i32 10, i32 * %var5_0
	br label %follow18
follow18:
	br label %init19
init19:
	br label %check20
check20:
	%tmp5_58 = load i32, i32 * %var5_0
	%tmp5_59 = icmp sge i32 0, %tmp5_58
	br i1 %tmp5_59, label %loop21, label %follow23
loop21:
	%tmp6_1 = load i32, i32 * %var5_0
	%tmp6_2 = icmp eq i32 %tmp6_1, 4
	br i1 %tmp6_2, label %then24, label %follow25
incre22:
	br label %check20
follow23:
	%tmp5_60 = sdiv i32 3, 5
	store i32 %tmp5_60, i32 * %var5_0
	%tmp5_61 = load i32, i32 * %var5_0
	%tmp5_62 = srem i32 %tmp5_61, 6
	store i32 %tmp5_62, i32 * %var5_0
	store i32 2, i32 * %var5_0
	%tmp5_63 = load i32, i32 * %var5_0
	%tmp5_64 = icmp eq i32 %tmp5_63, 2
	br i1 %tmp5_64, label %then26, label %follow27
then24:
	store i32 5, i32 * %var5_0
	br label %follow25
follow25:
	br label %follow23
	br label %incre22
	br label %incre22
then26:
	store i32 3, i32 * %var5_0
	store i32 4, i32 * %var5_0
	br label %follow27
follow27:
	br label %init28
init28:
	br label %check29
check29:
	%tmp5_65 = load i32, i32 * %var5_0
	%tmp5_66 = icmp eq i32 %tmp5_65, 4
	br i1 %tmp5_66, label %loop30, label %follow32
loop30:
	%tmp8_1 = load i32, i32 * %var5_0
	%tmp8_2 = add i32 %tmp8_1, 1
	store i32 %tmp8_2, i32 * %var5_0
	br label %incre31
	br label %incre31
incre31:
	br label %check29
follow32:
	%tmp5_67 = load i32, i32 * %var5_0
	%tmp5_68 = icmp eq i32 %tmp5_67, 5
	br i1 %tmp5_68, label %nextEq35, label %follow34
then33:
	store i32 6, i32 * %var5_0
	br label %follow34
follow34:
	%tmp5_71 = load i32, i32 * %var5_0
	%tmp5_72 = icmp ne i32 %tmp5_71, 6
	br i1 %tmp5_72, label %then36, label %nextAnd38
nextEq35:
	%tmp5_69 = load i32, i32 * %var5_0
	%tmp5_70 = icmp eq i32 %tmp5_69, 4
	br i1 %tmp5_70, label %then33, label %follow34
then36:
	store i32 0, i32 * %var5_0
	br label %follow37
follow37:
	%var5_1 = alloca [2 x i32]
	%var5_2 = alloca [2 x i32]
	%tmp5_75 = getelementptr [2 x i32], [2 x i32]* %var5_2, i32 0, i32 0
	store i32 1, i32 * %tmp5_75
	%tmp5_76 = getelementptr [2 x i32], [2 x i32]* %var5_2, i32 0, i32 1
	store i32 2, i32 * %tmp5_76
	%var5_3 = alloca [2 x [2 x i32]]
	%tmp5_77 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 0, i32 0
	store i32 1, i32 * %tmp5_77
	%tmp5_78 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 0, i32 1
	store i32 2, i32 * %tmp5_78
	%tmp5_79 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 1, i32 0
	store i32 3, i32 * %tmp5_79
	%tmp5_80 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 1, i32 1
	store i32 4, i32 * %tmp5_80
	%var5_4 = alloca [3 x i32]
	%tmp5_81 = getelementptr [3 x i32], [3 x i32]* %var5_4, i32 0, i32 0
	store i32 1, i32 * %tmp5_81
	%tmp5_82 = getelementptr [3 x i32], [3 x i32]* %var5_4, i32 0, i32 1
	store i32 2, i32 * %tmp5_82
	%tmp5_83 = getelementptr [3 x i32], [3 x i32]* %var5_4, i32 0, i32 2
	store i32 3, i32 * %tmp5_83
	%var5_5 = alloca [2 x [2 x i32]]
	%tmp5_84 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_5, i32 0, i32 0, i32 0
	store i32 1, i32 * %tmp5_84
	%tmp5_85 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_5, i32 0, i32 0, i32 1
	store i32 2, i32 * %tmp5_85
	%tmp5_86 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_5, i32 0, i32 1, i32 0
	store i32 1, i32 * %tmp5_86
	%tmp5_87 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_5, i32 0, i32 1, i32 1
	store i32 2, i32 * %tmp5_87
	%var5_6 = alloca [2 x i32]
	%tmp5_88 = sdiv i32 2, 4
	%tmp5_89 = mul i32 %tmp5_88, 2
	%tmp5_90 = srem i32 %tmp5_89, 6
	%tmp5_91 = add i32 4, %tmp5_90
	%tmp5_92 = sub i32 %tmp5_91, 5
	%tmp5_93 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 0
	store i32 %tmp5_92, i32 * %tmp5_93
	%tmp5_94 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 1
	store i32 9, i32 * %tmp5_94
	%tmp5_95 = load i32, i32 * %var5_0
	%tmp5_96 = call i32 @fd(i32 %tmp5_95)
	%tmp5_97 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 0
	store i32 %tmp5_96, i32 * %tmp5_97
	%tmp5_98 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 1
	%tmp5_99 = load i32, i32 * %tmp5_98
	%tmp5_100 = getelementptr [2 x i32], [2 x i32]* %var5_1, i32 0, i32 0
	%tmp5_101 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 0
	%tmp5_102 = call i32 @fk(i32 %tmp5_99, i32* %tmp5_100, [2 x i32]* %tmp5_101)
	%tmp5_103 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 1
	store i32 %tmp5_102, i32 * %tmp5_103
	%var5_7 = alloca i32
	store i32 4, i32 * %var5_7
	%tmp5_104 = call i32 @getint()
	store i32 %tmp5_104, i32 * %var5_7
	call void @f()
	%tmp5_106 = getelementptr [2 x i32], [2 x i32]* %var5_6, i32 0, i32 1
	%tmp5_107 = load i32, i32 * %tmp5_106
	%tmp5_108 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_3, i32 0, i32 1, i32 0
	%tmp5_109 = load i32, i32 * %tmp5_108
	%tmp5_110 = getelementptr [2 x [2 x i32]], [2 x [2 x i32]]* %var5_5, i32 0, i32 1, i32 1
	%tmp5_111 = load i32, i32 * %tmp5_110
	call void @ff(i32 %tmp5_107, i32 %tmp5_109, i32 %tmp5_111)
	%tmp5_113 = add i32 3, 0
	%tmp5_114 = call i32 @fd(i32 %tmp5_113)
	store i32 %tmp5_114, i32 * %var5_7
	ret i32 0
nextAnd38:
	%tmp5_73 = load i32, i32 * %var5_0
	%tmp5_74 = icmp eq i32 %tmp5_73, 3
	br i1 %tmp5_74, label %then36, label %follow37
}
